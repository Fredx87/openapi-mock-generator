{"version":3,"sources":["features/document/openapi-parser.ts","features/document/tree-builder.tsx","features/document/document-slice.ts","shared/utils.ts","database/database.ts","database/constants.ts","database/useDatabase.ts","features/projects-list/ProjectsListTable.tsx","features/projects-list/constants.tsx","features/projects-list/ProjectsListContainer.tsx","components/MyHeader.tsx","rootReducer.ts","store.ts","database/persist.ts","features/project/constants.tsx","components/MarkText.tsx","features/document/DocumentTreeSearch.tsx","features/document/DocumentTree.tsx","features/project/OpenApiLoader.tsx","features/project/ProjectHeader.tsx","features/project/ProjectSider.tsx","features/project/Project.tsx","features/project/ProjectContainer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["yamlParse","SwaggerParser","YAML","parse","openApiParser","file","pipe","reader","Promise","resolve","reject","FileReader","onload","result","Error","name","onerror","e","type","readAsText","TE","E","content","safeYamlParse","bundle","doc","isOpenApiV3Document","isOpenApiV2Document","jsonPost","withDecoder","res","withBody","post","data","convertOpenApi2to3","buildOperationTree","parentRef","method","operation","document","ref","children","responses","requestBody","operationId","requestBodyNode","schema","getOrResolveRef","resolvedSchema","isOpenApiComplexType","title","buildRequestBodyNode","push","responsesNodes","Object","entries","code","response","node","buildResponseNodes","buildPathTree","pathObj","operationMethods","buildPathsTree","paths","map","path","replace","escapeRef","buildDocumentTree","schemas","components","keys","sort","initialDocument","status","slice","createSlice","initialState","reducers","setDocument","state","action","currentDocument","cloneDeep","merged","merge","payload","playground","tree","setRefValue","value","parsed","convertRefToPath","O","console","error","set","actions","documentReducer","reducer","getDocument","undefined","parseOpenApiFile","dispatch","then","err","message","success","split","A","el","chunks","join","getObjectByRef","get","jsonSchemaRef","t","$ref","obj","is","allOf","anyOf","oneOf","DbContext","createContext","putProject","project","db","put","putProjectState","key","updateProjectModifiedAt","id","getProject","current","IOE","D","date","modifiedAt","useDatabase","useContext","HeaderContainer","styled","div","StyledButton","Button","renderDate","toLocaleString","ProjectsListTable","props","columns","dataIndex","width","render","_","record","index","isEditing","autoFocus","placeholder","defaultValue","onPressEnter","onProjectNameChanged","currentTarget","onBlur","to","__","disabled","editingDisabled","onClick","onStartEdit","onConfirm","onDeleteProject","onProjectCreate","dataSource","projects","locale","emptyText","description","pagination","Content","Layout","StyledContent","StyledContainer","toEditableProject","ProjectsListContainer","useState","setEditingDisabled","initial","setData","getProjectsFromDb","getAll","getAllProjects","failure","String","sorted","a","b","valueOf","useEffect","newProject","createdAt","Date","isSuccess","concat","newData","produce","draft","toDbProject","toCreate","createProject","delete","deleteProject","fold","showIcon","Container","StyledLink","Link","StyledMenuItem","Menu","Item","StyledA","StyledAIcon","MyHeader","theme","mode","href","target","rel","rootReducer","combineReducers","wrappedReducer","initStore","configureStore","middleware","getDefaultMiddleware","persistStateMiddleware","saveState","window","location","hash","getProjectId","store","next","getState","loadPersistedProject","getProjectState","MarkText","MarkComponent","markComponent","chops","RegExp","mark","chop","toLocaleLowerCase","StyledInput","Input","DocumentTreeSearch","allowClear","searchTerm","onChange","TreeNode","Tree","DirectoryTree","TreeContainer","StyledMark","getAllMatchingKeys","treeData","getNodeMatchingKeys","includes","child","DocumentTree","history","useHistory","useLocation","url","useRouteMatch","selectedKey","setSelectedKey","pathname","decodeURIComponent","length","setSearchTerm","expandedKeys","setExpandedKeys","autoExpandParent","setAutoExpandParent","containerRef","useRef","querySelector","scrollIntoView","selectedKeys","newExpandedKeys","data-testid","onSelect","eventKey","encodeURIComponent","onExpand","renderNode","selectable","icon","OpenApiLoader","useDispatch","beforeUpload","showUploadList","Title","h2","ProjectHeader","projectName","Group","blob","Blob","JSON","stringify","saveAs","Sider","ProjectSider","setProjectName","EditorsWrapper","React","lazy","StyledEmpty","Empty","Project","useSelector","Suspense","fallback","ProjectContainer","projectId","useParams","loaded","setLoaded","Header","StyledLayout","App","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","async","openDB","upgrade","createObjectStore","keyPath","autoIncrement","blocking","close","openDatabase","ReactDOM","Provider","getElementById","errorMsg","body","innerText","URL","process","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","notification","info","duration"],"mappings":"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","file":"static/js/main.e7b50dc8.chunk.js","sourcesContent":["import { post } from \"@contactlab/appy\";\nimport { withBody } from \"@contactlab/appy/combinators/body\";\nimport { withDecoder } from \"@contactlab/appy/combinators/decoder\";\nimport * as E from \"fp-ts/es6/Either\";\nimport { pipe } from \"fp-ts/es6/pipeable\";\nimport * as TE from \"fp-ts/es6/TaskEither\";\nimport { OpenAPI, OpenAPIV2, OpenAPIV3 } from \"openapi-types\";\nimport { isOpenApiV2Document, isOpenApiV3Document } from \"src/shared/utils\";\nimport SwaggerParser from \"swagger-parser\";\n\n// TODO: PR to swagger-parser for including YAML types\nconst yamlParse = (SwaggerParser as any).YAML.parse as (\n  text: string\n) => unknown;\n\nfunction safeYamlParse(content: string): E.Either<Error, unknown> {\n  return E.tryCatch(() => yamlParse(content), E.toError);\n}\n\nfunction convertOpenApi2to3(\n  doc: OpenAPIV2.Document\n): TE.TaskEither<Error, OpenAPIV3.Document> {\n  const jsonPost = withDecoder(res => E.right(res as OpenAPIV3.Document))(\n    withBody(doc)(post)\n  );\n\n  return pipe(\n    jsonPost(\"https://converter.swagger.io/api/convert\"),\n    TE.mapLeft(E.toError),\n    TE.map(res => res.data)\n  );\n}\n\nfunction readAsText(file: File): TE.TaskEither<Error, string> {\n  const reader = new Promise<string>(function(resolve, reject) {\n    var reader = new FileReader();\n    reader.onload = () => {\n      if (typeof reader.result === \"string\") {\n        resolve(reader.result);\n      }\n      reject(\n        new Error(`Error reading ${file.name}: read content is not a string`)\n      );\n    };\n    reader.onerror = e => {\n      reject(new Error(`Error reading ${file.name}: ${e.type}`));\n    };\n    reader.readAsText(file);\n  });\n  return TE.tryCatch(() => reader, E.toError);\n}\n\nexport function openApiParser(\n  file: File\n): TE.TaskEither<Error, OpenAPIV3.Document> {\n  return pipe(\n    readAsText(file),\n    TE.chain(content => TE.fromEither(safeYamlParse(content))),\n    TE.chain(content =>\n      TE.tryCatch(\n        // TODO: fix wrong type in SwaggerParser types\n        () => SwaggerParser.bundle(content as OpenAPI.Document),\n        E.toError\n      )\n    ),\n    TE.chain(doc =>\n      isOpenApiV3Document(doc)\n        ? TE.right(doc)\n        : isOpenApiV2Document(doc)\n        ? convertOpenApi2to3(doc)\n        : TE.left(new Error(\"Cannot parse swagger document\"))\n    )\n  );\n}\n","import { OpenAPIV3 } from \"openapi-types\";\nimport {\n  getOrResolveRef,\n  isOpenApiComplexType,\n  OperationMethod,\n  operationMethods\n} from \"../../shared/utils\";\nimport { MyDocument } from \"./document-slice\";\n\ninterface BaseTreeNode {\n  title: string;\n  ref: string;\n}\n\nexport interface LeafTreeNode extends BaseTreeNode {\n  type: \"Leaf\";\n}\n\nexport interface BranchTreeNode extends BaseTreeNode {\n  type: \"Branch\";\n  children: GeneralTreeNode[];\n}\n\nexport type GeneralTreeNode = LeafTreeNode | BranchTreeNode;\n\nconst escapeRef = (ref: string): string =>\n  ref.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n\nconst buildRequestBodyNode = (\n  parentRef: string,\n  requestBody: OpenAPIV3.ReferenceObject | OpenAPIV3.RequestBodyObject,\n  document: OpenAPIV3.Document\n): LeafTreeNode | undefined => {\n  const resolved = getOrResolveRef(requestBody, document);\n  const schema = resolved.content?.[\"application/json\"]?.schema;\n  if (schema) {\n    const resolvedSchema = getOrResolveRef(schema, document);\n    if (isOpenApiComplexType(resolvedSchema)) {\n      return {\n        type: \"Leaf\",\n        title: \"requestBody\",\n        ref: `${parentRef}/requestBody/content/application~1json/schema`\n      };\n    }\n  }\n};\n\nconst buildResponseNodes = (\n  parentRef: string,\n  responses: OpenAPIV3.ResponsesObject,\n  document: OpenAPIV3.Document\n): LeafTreeNode[] => {\n  const res: LeafTreeNode[] = [];\n\n  for (const [code, response] of Object.entries(responses)) {\n    const resolvedResponse = getOrResolveRef(response, document);\n    const schema = resolvedResponse.content?.[\"application/json\"]?.schema;\n    if (schema) {\n      const resolvedSchema = getOrResolveRef(schema, document);\n      if (isOpenApiComplexType(resolvedSchema)) {\n        const node: LeafTreeNode = {\n          type: \"Leaf\",\n          title: `response - ${code}`,\n          ref: `${parentRef}/${code}/content/application~1json/schema`\n        };\n        res.push(node);\n      }\n    }\n  }\n  return res;\n};\n\nconst buildOperationTree = (\n  parentRef: string,\n  method: OperationMethod,\n  operation: OpenAPIV3.OperationObject,\n  document: OpenAPIV3.Document\n): BranchTreeNode => {\n  const ref = `${parentRef}/${method}`;\n\n  const children: GeneralTreeNode[] = [];\n\n  const { responses, requestBody, operationId } = operation;\n\n  if (requestBody) {\n    const requestBodyNode = buildRequestBodyNode(ref, requestBody, document);\n    if (requestBodyNode) {\n      children.push(requestBodyNode);\n    }\n  }\n\n  if (responses) {\n    const responsesRef = `${ref}/responses`;\n    const responsesNodes = buildResponseNodes(\n      responsesRef,\n      responses,\n      document\n    );\n    children.push(...responsesNodes);\n  }\n\n  const title = operationId ? `${method} - ${operationId}` : method;\n\n  return {\n    type: \"Branch\",\n    title,\n    ref,\n    children\n  };\n};\n\nconst buildPathTree = (\n  parentRef: string,\n  pathObj: OpenAPIV3.PathItemObject,\n  document: OpenAPIV3.Document\n): BranchTreeNode[] => {\n  const res: BranchTreeNode[] = [];\n  for (const method of operationMethods) {\n    const operation = pathObj[method];\n    if (operation) {\n      res.push(buildOperationTree(parentRef, method, operation, document));\n    }\n  }\n  return res;\n};\n\nconst buildPathsTree = (\n  paths: OpenAPIV3.PathsObject,\n  document: OpenAPIV3.Document\n): BranchTreeNode[] =>\n  Object.entries(paths).map(\n    ([path, pathObj]): BranchTreeNode => {\n      const ref = `#/paths/${escapeRef(path)}`;\n      return {\n        type: \"Branch\",\n        title: path,\n        ref,\n        children: buildPathTree(ref, pathObj, document)\n      };\n    }\n  );\n\nconst buildSchemasTree = (\n  schemas: Record<string, OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject>\n): LeafTreeNode[] =>\n  Object.keys(schemas)\n    .sort()\n    .map(\n      (name): LeafTreeNode => ({\n        type: \"Leaf\",\n        title: name,\n        ref: `#/components/schemas/${name}`\n      })\n    );\n\nexport function buildDocumentTree(document?: MyDocument): GeneralTreeNode[] {\n  const res: GeneralTreeNode[] = [];\n\n  if (document) {\n    const { paths, components } = document;\n\n    res.push({\n      type: \"Branch\",\n      title: \"Paths\",\n      ref: \"#/paths\",\n      children: buildPathsTree(paths, document)\n    });\n\n    if (components && components.schemas) {\n      res.push({\n        type: \"Branch\",\n        title: \"Schemas\",\n        ref: \"#/components/schemas\",\n        children: buildSchemasTree(components.schemas)\n      });\n    }\n  }\n\n  const playgroundItem: LeafTreeNode = {\n    type: \"Leaf\",\n    title: \"Playground\",\n    ref: \"#/playground\"\n  };\n  res.push(playgroundItem);\n\n  return res;\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport message from \"antd/es/message\";\nimport * as E from \"fp-ts/es6/Either\";\nimport * as O from \"fp-ts/es6/Option\";\nimport { pipe } from \"fp-ts/es6/pipeable\";\nimport cloneDeep from \"lodash-es/cloneDeep\";\nimport merge from \"lodash-es/merge\";\nimport set from \"lodash-es/set\";\nimport { OpenAPIV3 } from \"openapi-types\";\nimport { RootState } from \"../../rootReducer\";\nimport { convertRefToPath } from \"../../shared/utils\";\nimport { AppThunk } from \"../../store\";\nimport { openApiParser } from \"./openapi-parser\";\nimport { buildDocumentTree, GeneralTreeNode } from \"./tree-builder\";\n\nexport interface MyDocument extends OpenAPIV3.Document {\n  playground: unknown;\n}\n\ninterface EmptyDocumentState {\n  status: \"empty\";\n}\n\ninterface LoadedDocumentState {\n  status: \"loaded\";\n  content: MyDocument;\n  tree: GeneralTreeNode[];\n}\n\nexport type DocumentState = EmptyDocumentState | LoadedDocumentState;\n\nexport function initialDocument(): DocumentState {\n  return {\n    status: \"empty\"\n  };\n}\n\ninterface SetRefValuePayload {\n  ref: string;\n  value: string;\n}\n\nconst slice = createSlice({\n  name: \"document\",\n  initialState: initialDocument(),\n  reducers: {\n    setDocument: (\n      state,\n      action: PayloadAction<OpenAPIV3.Document>\n    ): LoadedDocumentState => {\n      const currentDocument =\n        state.status === \"loaded\" ? cloneDeep(state.content) : {};\n      const merged = merge(currentDocument, action.payload);\n      const content: MyDocument = {\n        ...merged,\n        playground: {}\n      };\n\n      return {\n        status: \"loaded\",\n        content,\n        tree: buildDocumentTree(content)\n      };\n    },\n    setRefValue(state, action: PayloadAction<SetRefValuePayload>) {\n      if (state.status === \"loaded\") {\n        const { ref, value } = action.payload;\n\n        pipe(\n          E.parseJSON(value, E.toError),\n          E.map(parsed =>\n            pipe(\n              convertRefToPath(ref),\n              O.fold(\n                () => {\n                  console.error(`Cannot convert ref ${ref}`);\n                },\n                path => {\n                  set(state.content, path, parsed);\n                }\n              )\n            )\n          )\n        );\n      }\n    }\n  }\n});\n\nexport const { setDocument, setRefValue } = slice.actions;\nexport const documentReducer = slice.reducer;\n\nexport const getDocument = (state: RootState) =>\n  state.document.status === \"loaded\" ? state.document.content : undefined;\n\nexport const parseOpenApiFile = (file: File): AppThunk => dispatch => {\n  openApiParser(file)().then(res =>\n    pipe(\n      res,\n      E.fold(\n        err => {\n          console.error(err);\n          message.error(\"Invalid OpenApi file\");\n        },\n        res => {\n          dispatch(setDocument(res));\n          message.success(\"File loaded successfully\");\n        }\n      )\n    )\n  );\n};\n","import * as A from \"fp-ts/es6/Array\";\nimport * as O from \"fp-ts/es6/Option\";\nimport { pipe } from \"fp-ts/es6/pipeable\";\nimport * as t from \"io-ts/es6\";\nimport get from \"lodash-es/get\";\nimport { OpenAPI, OpenAPIV3 } from \"openapi-types\";\n\nexport const operationMethods = [\n  \"get\",\n  \"post\",\n  \"put\",\n  \"delete\",\n  \"options\"\n] as const;\nexport type OperationMethod = typeof operationMethods[number];\n\nexport function isOpenApiV3Document(\n  doc: OpenAPI.Document\n): doc is OpenAPIV3.Document {\n  return \"openapi\" in doc;\n}\n\nexport function isOpenApiV2Document(\n  doc: OpenAPI.Document\n): doc is OpenAPIV3.Document {\n  return \"swagger\" in doc;\n}\n\nexport function convertRefToPath(ref: string): O.Option<string> {\n  return pipe(\n    ref.split(\"/\"),\n    A.map(el => el.replace(/~1/g, \"/\").replace(/~0/g, \"~\")),\n    A.tail,\n    O.map(chunks => chunks.join(\".\"))\n  );\n}\n\nexport function getObjectByRef(\n  ref: string,\n  document: OpenAPIV3.Document\n): any | undefined {\n  return pipe(\n    convertRefToPath(ref),\n    O.map(path => get(document, path)),\n    O.getOrElse(() => undefined)\n  );\n}\n\nexport const jsonSchemaRef = t.exact(t.type({ $ref: t.string }));\n\nexport function getOrResolveRef<T>(\n  obj: OpenAPIV3.ReferenceObject | T,\n  document: OpenAPIV3.Document\n): T {\n  return jsonSchemaRef.is(obj)\n    ? (getObjectByRef(obj.$ref, document) as T)\n    : obj;\n}\n\nexport function isOpenApiComplexType(schema: OpenAPIV3.SchemaObject) {\n  return (\n    schema.allOf ||\n    schema.anyOf ||\n    schema.oneOf ||\n    schema.type === \"array\" ||\n    schema.type === \"object\"\n  );\n}\n","import * as D from \"fp-ts/es6/Date\";\nimport * as E from \"fp-ts/es6/Either\";\nimport * as IOE from \"fp-ts/es6/IOEither\";\nimport { pipe } from \"fp-ts/es6/pipeable\";\nimport * as TE from \"fp-ts/es6/TaskEither\";\nimport { DBSchema, IDBPDatabase, openDB } from \"idb\";\nimport { createContext } from \"react\";\nimport { RootState } from \"src/rootReducer\";\nimport { initialDocument } from \"../features/document/document-slice\";\nimport { DB_NAME, PROJECT_STATE_STORE, PROJECT_STORE } from \"./constants\";\n\nexport const DbContext = createContext<IDBPDatabase<MyDb> | undefined>(\n  undefined\n);\n\nexport interface DbProject {\n  id?: number;\n  name: string;\n  createdAt: Date;\n  modifiedAt: Date;\n}\n\nexport interface MyDb extends DBSchema {\n  project: {\n    key: number;\n    value: DbProject;\n  };\n  projectState: {\n    key: number;\n    value: RootState;\n  };\n}\n\nexport async function openDatabase(): Promise<IDBPDatabase<MyDb>> {\n  const db = await openDB<MyDb>(DB_NAME, 1, {\n    upgrade(db) {\n      db.createObjectStore(PROJECT_STORE, {\n        keyPath: \"id\",\n        autoIncrement: true\n      });\n      db.createObjectStore(PROJECT_STATE_STORE);\n    },\n    blocking() {\n      db.close();\n    }\n  });\n  return db;\n}\n\nexport function getAllProjects(\n  db: IDBPDatabase<MyDb>\n): TE.TaskEither<Error, DbProject[]> {\n  return TE.tryCatch(() => db.getAll(PROJECT_STORE), E.toError);\n}\n\nexport function getProject(\n  id: number,\n  db: IDBPDatabase<MyDb>\n): TE.TaskEither<Error, DbProject> {\n  return pipe(\n    TE.tryCatch(() => db.get(PROJECT_STORE, id), E.toError),\n    TE.chain(res =>\n      res\n        ? TE.right(res)\n        : TE.left(\n            new Error(`Project with id \"${id}\" not found in the database`)\n          )\n    )\n  );\n}\n\nexport function putProject(\n  project: DbProject,\n  db: IDBPDatabase<MyDb>\n): TE.TaskEither<Error, number> {\n  return TE.tryCatch(() => db.put(PROJECT_STORE, project), E.toError);\n}\n\nexport function putProjectState(\n  state: RootState,\n  key: number,\n  db: IDBPDatabase<MyDb>\n): TE.TaskEither<Error, number> {\n  return TE.tryCatch(() => db.put(PROJECT_STATE_STORE, state, key), E.toError);\n}\n\nexport function createProject(\n  project: DbProject,\n  db: IDBPDatabase<MyDb>\n): TE.TaskEither<Error, number> {\n  const toCreate = { ...project };\n  delete toCreate[\"id\"];\n  return pipe(\n    putProject(toCreate, db),\n    TE.chain(key => putProjectState({ document: initialDocument() }, key, db))\n  );\n}\n\nexport function deleteProject(\n  project: DbProject,\n  db: IDBPDatabase<MyDb>\n): TE.TaskEither<Error, void> {\n  const { id } = project;\n\n  if (id === undefined) {\n    return TE.left(new Error(`Cannot delete a project without id`));\n  }\n\n  return pipe(\n    TE.tryCatch(() => db.delete(PROJECT_STORE, id), E.toError),\n    TE.chain(() =>\n      TE.tryCatch(() => db.delete(PROJECT_STATE_STORE, id), E.toError)\n    )\n  );\n}\n\nexport function getProjectState(\n  id: number,\n  db: IDBPDatabase<MyDb>\n): TE.TaskEither<Error, RootState> {\n  return pipe(\n    TE.tryCatch(() => db.get(\"projectState\", id), E.toError),\n    TE.chain(res =>\n      res ? TE.right(res) : TE.left(new Error(\"Project state not found\"))\n    )\n  );\n}\n\nexport function updateProjectModifiedAt(\n  id: number,\n  db: IDBPDatabase<MyDb>\n): TE.TaskEither<Error, void> {\n  return pipe(\n    getProject(id, db),\n    TE.chain(current =>\n      pipe(\n        TE.fromIOEither<Error, Date>(IOE.rightIO(D.create)),\n        TE.map<Date, DbProject>(date => ({ ...current, modifiedAt: date })),\n        TE.chain(project => putProject(project, db)),\n        TE.map(() => undefined)\n      )\n    )\n  );\n}\n","export const DB_NAME = \"MockGenerator\";\nexport const PROJECT_STORE = \"project\";\nexport const PROJECT_STATE_STORE = \"projectState\";\n","import { IDBPDatabase } from \"idb\";\nimport { useContext } from \"react\";\nimport { DbContext, MyDb } from \"src/database/database\";\n\nexport function useDatabase(): IDBPDatabase<MyDb> {\n  const db = useContext(DbContext);\n\n  if (db === undefined) {\n    throw new Error(\"Database connection not set\");\n  }\n\n  return db;\n}\n","import Button from \"antd/es/button\";\nimport Divider from \"antd/es/divider\";\nimport Empty from \"antd/es/empty\";\nimport Input from \"antd/es/input\";\nimport PopConfirm from \"antd/es/popconfirm\";\nimport Table, { ColumnProps } from \"antd/es/table\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { DbProject } from \"../../database/database\";\nimport {\n  CREATE_PROJECT_MSG,\n  EMPTY_MSG,\n  NEW_PROJECT_NAME_PLACEHOLDER\n} from \"./constants\";\n\nconst HeaderContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst StyledButton = styled(Button)`\n  padding: 0;\n`;\n\nexport interface EditableProject extends DbProject {\n  isEditing: boolean;\n  key: number;\n}\n\ninterface ProjectsListTableProps {\n  editingDisabled: boolean;\n  projects: EditableProject[];\n  onProjectCreate: () => void;\n  onProjectNameChanged: (index: number, name: string) => void;\n  onStartEdit: (index: number) => void;\n  onDeleteProject: (index: number) => void;\n}\n\nfunction renderDate(date: Date): string {\n  return date.toLocaleString();\n}\n\nexport const ProjectsListTable: React.FC<ProjectsListTableProps> = props => {\n  const columns: ColumnProps<EditableProject>[] = [\n    {\n      title: \"Project name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"50%\",\n      render: (_, record, index) => {\n        if (record.isEditing) {\n          return (\n            <Input\n              autoFocus\n              placeholder={NEW_PROJECT_NAME_PLACEHOLDER}\n              defaultValue={record.name}\n              onPressEnter={e => {\n                props.onProjectNameChanged(index, e.currentTarget.value);\n              }}\n              onBlur={e => {\n                props.onProjectNameChanged(index, e.currentTarget.value);\n              }}\n            />\n          );\n        } else {\n          return <Link to={`/${record.id}/${record.name}`}>{record.name}</Link>;\n        }\n      }\n    },\n    {\n      title: \"Created At\",\n      dataIndex: \"createdAt\",\n      key: \"createdAt\",\n      render: renderDate\n    },\n    {\n      title: \"Modified At\",\n      dataIndex: \"modifiedAt\",\n      key: \"modifiedAt\",\n      render: renderDate\n    },\n    {\n      title: \"Actions\",\n      key: \"actions\",\n      render: (_, __, index) => {\n        return (\n          <>\n            <StyledButton\n              type=\"link\"\n              disabled={props.editingDisabled}\n              onClick={() => {\n                props.onStartEdit(index);\n              }}\n            >\n              Edit\n            </StyledButton>\n            <Divider type=\"vertical\" />\n            <PopConfirm\n              title=\"Are you sure?\"\n              onConfirm={() => {\n                props.onDeleteProject(index);\n              }}\n            >\n              <StyledButton type=\"link\" disabled={props.editingDisabled}>\n                Delete\n              </StyledButton>\n            </PopConfirm>\n          </>\n        );\n      }\n    }\n  ];\n\n  return (\n    <>\n      <HeaderContainer>\n        <Button\n          type=\"primary\"\n          onClick={props.onProjectCreate}\n          disabled={props.editingDisabled}\n        >\n          {CREATE_PROJECT_MSG}\n        </Button>\n      </HeaderContainer>\n      <Table<EditableProject>\n        dataSource={props.projects}\n        columns={columns}\n        locale={{ emptyText: <Empty description={EMPTY_MSG} /> }}\n        pagination={false}\n      ></Table>\n    </>\n  );\n};\n","export const CREATE_PROJECT_MSG = \"Create Project\";\nexport const NEW_PROJECT_NAME_PLACEHOLDER = \"New Project Name\";\nexport const EMPTY_MSG = \"No project found. Please create a new project.\";\n","import {\n  failure,\n  fold,\n  initial,\n  isSuccess,\n  RemoteData,\n  success\n} from \"@devexperts/remote-data-ts\";\nimport Alert from \"antd/es/alert\";\nimport Layout from \"antd/es/layout\";\nimport message from \"antd/es/message\";\nimport Skeleton from \"antd/es/skeleton\";\nimport * as E from \"fp-ts/es6/Either\";\nimport { pipe } from \"fp-ts/es6/pipeable\";\nimport { produce } from \"immer\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  createProject,\n  DbProject,\n  deleteProject,\n  getAllProjects,\n  putProject\n} from \"src/database/database\";\nimport { useDatabase } from \"src/database/useDatabase\";\nimport styled from \"styled-components\";\nimport { EditableProject, ProjectsListTable } from \"./ProjectsListTable\";\n\nconst { Content } = Layout;\n\nconst StyledContent = styled(Content)`\n  background: #fff;\n`;\n\nconst StyledContainer = styled.div`\n  padding: 20px 50px;\n  max-width: 1200px;\n  margin: auto;\n`;\n\nfunction toEditableProject(project: DbProject): EditableProject {\n  return { ...project, isEditing: false, key: project.id || -1 };\n}\n\nfunction toDbProject(project: EditableProject): DbProject {\n  return {\n    id: project.id,\n    name: project.name,\n    createdAt: project.createdAt,\n    modifiedAt: project.modifiedAt\n  };\n}\n\nexport const ProjectsListContainer: React.FC = () => {\n  const [editingDisabled, setEditingDisabled] = useState(false);\n  const [data, setData] = useState<RemoteData<string, EditableProject[]>>(\n    initial\n  );\n  const db = useDatabase();\n\n  useEffect(() => {\n    getProjectsFromDb();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function getProjectsFromDb() {\n    getAllProjects(db)().then(res =>\n      pipe(\n        res,\n        E.fold(\n          e => {\n            setData(failure(String(e)));\n          },\n          projects => {\n            const sorted = projects.sort(\n              (a, b) => b.modifiedAt.valueOf() - a.modifiedAt.valueOf()\n            );\n            setData(success(sorted.map(toEditableProject)));\n            setEditingDisabled(false);\n          }\n        )\n      )\n    );\n  }\n\n  const onProjectCreate = () => {\n    const newProject: EditableProject = {\n      key: -1,\n      name: \"\",\n      createdAt: new Date(),\n      modifiedAt: new Date(),\n      isEditing: true\n    };\n    setEditingDisabled(true);\n    setData(data =>\n      isSuccess(data)\n        ? success([newProject].concat(data.value))\n        : success([newProject])\n    );\n  };\n\n  const onStartEdit = (index: number) => {\n    if (isSuccess(data) && data.value[index]) {\n      const newData = produce(data.value, draft => {\n        draft[index].isEditing = true;\n      });\n      setEditingDisabled(true);\n      setData(success(newData));\n    }\n  };\n\n  const onProjectNameChanged = (index: number, value: string) => {\n    if (value && isSuccess(data) && data.value[index]) {\n      const project = toDbProject(data.value[index]);\n      project.name = value;\n\n      const operation =\n        project.id === undefined\n          ? createProject(project, db)\n          : putProject(project, db);\n\n      operation().then(res =>\n        pipe(\n          res,\n          E.fold(\n            e => {\n              message.error(e);\n            },\n            () => {\n              getProjectsFromDb();\n            }\n          )\n        )\n      );\n    } else {\n      getProjectsFromDb();\n    }\n  };\n\n  const onDeleteProject = (index: number) => {\n    if (isSuccess(data) && data.value[index]) {\n      const project = data.value[index];\n      deleteProject(project, db)().then(res =>\n        pipe(\n          res,\n          E.fold(\n            e => {\n              message.error(e);\n            },\n            () => {\n              getProjectsFromDb();\n            }\n          )\n        )\n      );\n    }\n  };\n\n  return (\n    <StyledContent>\n      <StyledContainer>\n        {pipe(\n          data,\n          fold(\n            () => <Skeleton />,\n            () => <Skeleton />,\n            error => (\n              <Alert\n                message=\"Error\"\n                description={error}\n                type=\"error\"\n                showIcon\n              />\n            ),\n            projects => (\n              <ProjectsListTable\n                editingDisabled={editingDisabled}\n                projects={projects}\n                onProjectCreate={onProjectCreate}\n                onProjectNameChanged={onProjectNameChanged}\n                onStartEdit={onStartEdit}\n                onDeleteProject={onDeleteProject}\n              ></ProjectsListTable>\n            )\n          )\n        )}\n      </StyledContainer>\n    </StyledContent>\n  );\n};\n","import Icon from \"antd/es/icon\";\nimport Menu from \"antd/es/menu\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const PAGE_TITLE = \"OpenAPI Mock Generator\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StyledLink = styled(Link)`\n  color: #fff;\n\n  &:hover {\n    color: #fff;\n  }\n`;\n\nconst StyledMenuItem = styled(Menu.Item)`\n  &&&.ant-menu-item-selected {\n    background-color: transparent;\n  }\n`;\n\nconst StyledA = styled.a`\n  &&& {\n    color: #ddd;\n    line-height: 64px;\n\n    &:hover {\n      color: #fff;\n    }\n  }\n`;\n\nconst StyledAIcon = styled.a`\n  &&& {\n    font-size: 30px;\n    line-height: 64px;\n\n    i {\n      font-size: 30px;\n    }\n  }\n`;\n\nexport const MyHeader: React.FC = () => (\n  <Container>\n    <h1>\n      <StyledLink to=\"/\">{PAGE_TITLE}</StyledLink>\n    </h1>\n    <Menu theme=\"dark\" mode=\"horizontal\">\n      <StyledMenuItem>\n        <StyledA\n          href=\"https://github.com/Fredx87/openapi-mock-generator/blob/master/README.md\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Documentation\n        </StyledA>\n      </StyledMenuItem>\n      <StyledMenuItem>\n        <StyledA\n          href=\"http://marak.github.io/faker.js/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Faker.js APIs\n        </StyledA>\n      </StyledMenuItem>\n      <StyledMenuItem>\n        <StyledA\n          href=\"https://chancejs.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Chance APIs\n        </StyledA>\n      </StyledMenuItem>\n      <StyledMenuItem>\n        <StyledAIcon\n          href=\"https://github.com/Fredx87/openapi-mock-generator\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon type=\"github\" />\n        </StyledAIcon>\n      </StyledMenuItem>\n    </Menu>\n  </Container>\n);\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport { documentReducer } from \"./features/document/document-slice\";\n\nexport const rootReducer = combineReducers({\n  document: documentReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import {\n  Action,\n  AnyAction,\n  configureStore,\n  getDefaultMiddleware,\n  Reducer\n} from \"@reduxjs/toolkit\";\nimport { IDBPDatabase } from \"idb\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { MyDb } from \"./database/database\";\nimport { persistStateMiddleware } from \"./database/persist\";\nimport { rootReducer, RootState } from \"./rootReducer\";\n\nexport const SET_PERSISTED_DOCUMENT_ACTION_TYPE = \"db/set persisted document\";\n\nexport interface SetPersistedDocumentAction {\n  type: typeof SET_PERSISTED_DOCUMENT_ACTION_TYPE;\n  payload: RootState;\n}\n\nconst wrappedReducer: Reducer<RootState, AnyAction> = (state, action) => {\n  if (action.type === SET_PERSISTED_DOCUMENT_ACTION_TYPE) {\n    return action.payload;\n  }\n  return rootReducer(state, action);\n};\n\nexport function initStore(db: IDBPDatabase<MyDb>) {\n  return configureStore({\n    reducer: wrappedReducer,\n    middleware: [...getDefaultMiddleware(), persistStateMiddleware(db)]\n  });\n}\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;\n","import { Dispatch, Middleware } from \"@reduxjs/toolkit\";\nimport * as E from \"fp-ts/es6/Either\";\nimport * as IOE from \"fp-ts/es6/IOEither\";\nimport * as O from \"fp-ts/es6/Option\";\nimport { pipe } from \"fp-ts/es6/pipeable\";\nimport * as TE from \"fp-ts/es6/TaskEither\";\nimport { IDBPDatabase } from \"idb\";\nimport { RootState } from \"src/rootReducer\";\nimport {\n  SetPersistedDocumentAction,\n  SET_PERSISTED_DOCUMENT_ACTION_TYPE\n} from \"src/store\";\nimport {\n  getProjectState,\n  MyDb,\n  putProjectState,\n  updateProjectModifiedAt\n} from \"./database\";\n\nexport function getProjectId(): IOE.IOEither<Error, number> {\n  return pipe(\n    IOE.fromOption(() => new Error(`Saved Project Id not found`))(\n      O.fromNullable(window.location.hash.split(\"/\")?.[1])\n    ),\n    IOE.map(res => +res)\n  );\n}\n\nfunction saveState(\n  state: RootState,\n  db: IDBPDatabase<MyDb>\n): TE.TaskEither<Error, void> {\n  return pipe(\n    TE.fromIOEither(getProjectId()),\n    TE.chain(id =>\n      pipe(\n        putProjectState(state, id, db),\n        TE.chain(() => updateProjectModifiedAt(id, db))\n      )\n    )\n  );\n}\n\nexport function persistStateMiddleware(\n  db: IDBPDatabase<MyDb>\n): Middleware<{}, RootState> {\n  return store => next => action => {\n    next(action);\n    saveState(store.getState(), db)().then(res =>\n      pipe(\n        res,\n        E.fold(console.error, () => {})\n      )\n    );\n  };\n}\n\nexport function loadPersistedProject(\n  id: number,\n  dispatch: Dispatch,\n  db: IDBPDatabase<MyDb>\n): TE.TaskEither<Error, void> {\n  return pipe(\n    getProjectState(id, db),\n    TE.map(state => {\n      const setStoreAction: SetPersistedDocumentAction = {\n        type: SET_PERSISTED_DOCUMENT_ACTION_TYPE,\n        payload: state\n      };\n      dispatch(setStoreAction);\n      return undefined;\n    })\n  );\n}\n","export const EMPTY_PROJECT_MSG =\n  \"No data found for current project. Please upload an OpenAPI document.\";\n\nexport const UPLOAD_SPEC_MSG = \"Upload Spec\";\nexport const DOWNLOAD_SPEC_MSG = \"Download Spec\";\n","import React from \"react\";\n\ninterface MarkTextProps {\n  content: string;\n  mark: string;\n  markComponent?: React.ComponentType;\n}\n\nexport const MarkText: React.FC<MarkTextProps> = props => {\n  const MarkComponent = props.markComponent ? props.markComponent : \"mark\";\n  const chops = props.content.split(new RegExp(`(${props.mark})`, \"gi\"));\n  return (\n    <span>\n      {chops.map((chop, index) =>\n        chop.toLocaleLowerCase() === props.mark.toLocaleLowerCase() ? (\n          <MarkComponent key={index}>{chop}</MarkComponent>\n        ) : (\n          chop\n        )\n      )}\n    </span>\n  );\n};\n","import Input from \"antd/es/input\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst StyledInput = styled(Input)`\n  input {\n    border-radius: 0;\n  }\n`;\n\ninterface DocumentTreeSearchProps {\n  searchTerm: string;\n  onChange: (value: string) => void;\n}\n\nexport const DocumentTreeSearch: React.FC<DocumentTreeSearchProps> = props => {\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    props.onChange(e.currentTarget.value);\n  };\n\n  return (\n    <Container>\n      <StyledInput\n        allowClear\n        placeholder=\"Search...\"\n        value={props.searchTerm}\n        onChange={onChange}\n      ></StyledInput>\n    </Container>\n  );\n};\n","import Icon from \"antd/es/icon\";\nimport Tree from \"antd/es/tree\";\nimport { AntTreeNodeSelectedEvent } from \"antd/lib/tree\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { MarkText } from \"../../components/MarkText\";\nimport { DocumentTreeSearch } from \"./DocumentTreeSearch\";\nimport { BranchTreeNode, GeneralTreeNode } from \"./tree-builder\";\n\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst Container = styled.div`\n  margin-top: 15px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst TreeContainer = styled.div`\n  flex: 1;\n  overflow: auto;\n`;\n\nconst StyledMark = styled.mark`\n  padding: 0;\n  background-color: #ffe58f;\n`;\n\nfunction renderNode(\n  node: GeneralTreeNode,\n  searchTerm: string\n): React.ReactNode {\n  const title = searchTerm ? (\n    <MarkText\n      content={node.title}\n      mark={searchTerm}\n      markComponent={StyledMark}\n    ></MarkText>\n  ) : (\n    node.title\n  );\n\n  if (node.type === \"Branch\") {\n    return (\n      <TreeNode selectable={false} key={node.ref} title={title}>\n        {node.children.map(child => renderNode(child, searchTerm))}\n      </TreeNode>\n    );\n  }\n  return (\n    <TreeNode\n      icon={<Icon type=\"file-text\" theme=\"twoTone\"></Icon>}\n      key={node.ref}\n      title={title}\n    ></TreeNode>\n  );\n}\n\nfunction getNodeMatchingKeys(\n  searchTerm: string,\n  node: GeneralTreeNode\n): string[] {\n  const res: string[] = [];\n  if (node.title.toLocaleLowerCase().includes(searchTerm.toLocaleLowerCase())) {\n    res.push(node.ref);\n  }\n  if (node.type === \"Branch\") {\n    for (const child of node.children) {\n      res.push(...getNodeMatchingKeys(searchTerm, child));\n    }\n  }\n  return res;\n}\n\nfunction getAllMatchingKeys(searchTerm: string, treeData: GeneralTreeNode[]) {\n  const rootNode: BranchTreeNode = {\n    type: \"Branch\",\n    title: \"\",\n    ref: \"\",\n    children: treeData\n  };\n  return getNodeMatchingKeys(searchTerm, rootNode);\n}\n\nexport interface DocumentTreeProps {\n  tree: GeneralTreeNode[];\n}\n\nexport const DocumentTree: React.FC<DocumentTreeProps> = props => {\n  const history = useHistory();\n  const location = useLocation();\n  const { url } = useRouteMatch();\n\n  const [selectedKey, setSelectedKey] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    const paths = location.pathname.split(\"/\");\n    setSelectedKey(decodeURIComponent(paths[paths.length - 1]));\n  }, [location]);\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [expandedKeys, setExpandedKeys] = useState<string[]>([]);\n  const [autoExpandParent, setAutoExpandParent] = useState(false);\n\n  const containerRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (containerRef.current && searchTerm) {\n      containerRef.current.querySelector(\"mark\")?.scrollIntoView();\n    }\n  }, [searchTerm]);\n\n  const selectedKeys: string[] = selectedKey ? [selectedKey] : [];\n  const onSelect = (_: unknown, e: AntTreeNodeSelectedEvent) => {\n    const node = e.node.props;\n    if (node.eventKey) {\n      history.push(`${url}/${encodeURIComponent(node.eventKey!)}`);\n    }\n  };\n\n  const onSearchChange = (value: string) => {\n    setSearchTerm(value);\n    const newExpandedKeys = value ? getAllMatchingKeys(value, props.tree) : [];\n    setExpandedKeys(newExpandedKeys);\n    setAutoExpandParent(true);\n  };\n\n  const onExpand = (keys: string[]) => {\n    setExpandedKeys(keys);\n    setAutoExpandParent(false);\n  };\n\n  return (\n    <Container>\n      <DocumentTreeSearch\n        searchTerm={searchTerm}\n        onChange={onSearchChange}\n      ></DocumentTreeSearch>\n      <TreeContainer data-testid=\"document-tree\" ref={containerRef}>\n        <DirectoryTree\n          onSelect={onSelect}\n          selectedKeys={selectedKeys}\n          autoExpandParent={autoExpandParent}\n          expandedKeys={expandedKeys}\n          onExpand={onExpand}\n        >\n          {props.tree.map(child => renderNode(child, searchTerm))}\n        </DirectoryTree>\n      </TreeContainer>\n    </Container>\n  );\n};\n","import Button from \"antd/es/button\";\nimport Icon from \"antd/es/icon\";\nimport Upload from \"antd/es/upload\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { parseOpenApiFile } from \"../document/document-slice\";\nimport { UPLOAD_SPEC_MSG } from \"./constants\";\n\nconst StyledButton = styled(Button)`\n  &&& {\n    border-top-left-radius: 4px;\n    border-bottom-left-radius: 4px;\n  }\n`;\n\nexport const OpenApiLoader: React.FC = () => {\n  const dispatch = useDispatch();\n\n  function beforeUpload(file: File): boolean {\n    dispatch(parseOpenApiFile(file));\n    return false;\n  }\n\n  return (\n    <Upload beforeUpload={beforeUpload} showUploadList={false}>\n      <StyledButton type=\"primary\">\n        <Icon type=\"upload\" /> {UPLOAD_SPEC_MSG}\n      </StyledButton>\n    </Upload>\n  );\n};\n","import Button from \"antd/es/button\";\nimport { saveAs } from \"file-saver\";\nimport cloneDeep from \"lodash-es/cloneDeep\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { DocumentState } from \"../document/document-slice\";\nimport { DOWNLOAD_SPEC_MSG } from \"./constants\";\nimport { OpenApiLoader } from \"./OpenApiLoader\";\n\nconst Container = styled.div`\n  padding: 4px 0;\n  text-align: center;\n`;\n\nconst Title = styled.h2`\n  font-size: 20px;\n`;\n\ninterface ProjectHeaderProps {\n  projectName: string;\n  document: DocumentState;\n}\n\nexport const ProjectHeader: React.FC<ProjectHeaderProps> = props => {\n  const { document, projectName } = props;\n  const onDownloadClick = () => {\n    if (document.status === \"loaded\") {\n      const content = cloneDeep(document.content);\n      delete content.playground;\n      const blob = new Blob([JSON.stringify(content, null, 2)], {\n        type: \"application/json;charset=utf-8\"\n      });\n      saveAs(blob, `${projectName}.json`);\n    }\n  };\n\n  return (\n    <Container>\n      <Title>{projectName}</Title>\n      <Button.Group>\n        <OpenApiLoader></OpenApiLoader>\n        <Button\n          icon=\"download\"\n          disabled={document.status === \"empty\"}\n          onClick={onDownloadClick}\n        >\n          {DOWNLOAD_SPEC_MSG}\n        </Button>\n      </Button.Group>\n    </Container>\n  );\n};\n","import Layout from \"antd/es/layout\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { DocumentState } from \"../document/document-slice\";\nimport { DocumentTree } from \"../document/DocumentTree\";\nimport { ProjectHeader } from \"./ProjectHeader\";\n\nconst { Sider } = Layout;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\ninterface ProjectSiderProps {\n  document: DocumentState;\n}\n\nexport const ProjectSider: React.FC<ProjectSiderProps> = props => {\n  const location = useLocation();\n  const [projectName, setProjectName] = useState<string>(\"\");\n\n  useEffect(() => {\n    const paths = location.pathname.split(\"/\");\n    setProjectName(decodeURIComponent(paths[2]));\n  }, [location]);\n\n  return (\n    <Sider theme=\"light\" width={300}>\n      <Container>\n        <ProjectHeader\n          projectName={projectName}\n          document={props.document}\n        ></ProjectHeader>\n        {props.document.status === \"loaded\" && (\n          <DocumentTree tree={props.document.tree}></DocumentTree>\n        )}\n      </Container>\n    </Sider>\n  );\n};\n","import Empty from \"antd/es/empty\";\nimport Layout from \"antd/es/layout\";\nimport Skeleton from \"antd/es/skeleton\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport { RootState } from \"src/rootReducer\";\nimport styled from \"styled-components\";\nimport { EMPTY_PROJECT_MSG } from \"./constants\";\nimport { ProjectSider } from \"./ProjectSider\";\n\nconst EditorsWrapper = React.lazy(() =>\n  import(\"src/features/editor/EditorsWrapper\")\n);\n\nconst { Content } = Layout;\n\nconst StyledEmpty = styled(Empty)`\n  padding: 30px 0;\n`;\n\nexport const Project: React.FC = () => {\n  const document = useSelector((state: RootState) => state.document);\n  const { path } = useRouteMatch();\n\n  return (\n    <Layout>\n      <ProjectSider document={document} />\n      <Content>\n        {document.status === \"empty\" ? (\n          <StyledEmpty description={EMPTY_PROJECT_MSG} />\n        ) : (\n          <Switch>\n            <Route path={`${path}/:referenceName`}>\n              <React.Suspense fallback={<Skeleton />}>\n                <EditorsWrapper />\n              </React.Suspense>\n            </Route>\n          </Switch>\n        )}\n      </Content>\n    </Layout>\n  );\n};\n","import Skeleton from \"antd/es/skeleton\";\nimport * as E from \"fp-ts/es6/Either\";\nimport { pipe } from \"fp-ts/es6/pipeable\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useDatabase } from \"src/database/useDatabase\";\nimport { loadPersistedProject } from \"../../database/persist\";\nimport { Project } from \"./Project\";\n\nexport const ProjectContainer: React.FC = () => {\n  const { projectId } = useParams<{ projectId: string }>();\n  const [loaded, setLoaded] = useState(false);\n  const dispatch = useDispatch();\n  const db = useDatabase();\n\n  useEffect(() => {\n    loadPersistedProject(+projectId, dispatch, db)().then(res =>\n      pipe(\n        res,\n        E.fold(console.error, () => {\n          setLoaded(true);\n        })\n      )\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [projectId]);\n\n  return loaded ? <Project /> : <Skeleton />;\n};\n","import Layout from \"antd/es/layout\";\nimport React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { ProjectsListContainer } from \"src/features/projects-list/ProjectsListContainer\";\nimport styled from \"styled-components\";\nimport { MyHeader } from \"./components/MyHeader\";\nimport { ProjectContainer } from \"./features/project/ProjectContainer\";\n\nconst { Header } = Layout;\n\nconst StyledLayout = styled(Layout)`\n  height: 100vh;\n`;\n\nconst App: React.FC = () => {\n  return (\n    <HashRouter>\n      <StyledLayout>\n        <Header>\n          <MyHeader></MyHeader>\n        </Header>\n        <Switch>\n          <Route exact path=\"/\">\n            <ProjectsListContainer />\n          </Route>\n          <Route path=\"/:projectId/:projectName\">\n            <ProjectContainer />\n          </Route>\n        </Switch>\n      </StyledLayout>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"antd/dist/antd.css\";\nimport notification from \"antd/es/notification\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport { DbContext, openDatabase } from \"./database/database\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { initStore } from \"./store\";\n\nopenDatabase().then(\n  db => {\n    ReactDOM.render(\n      <DbContext.Provider value={db}>\n        <Provider store={initStore(db)}>\n          <App />\n        </Provider>\n      </DbContext.Provider>,\n      document.getElementById(\"root\")\n    );\n  },\n  e => {\n    const errorMsg = `Error: Cannot open database: ${String(e)}`;\n    document.body.innerText = errorMsg;\n  }\n);\n\nserviceWorker.register({\n  onUpdate: () => {\n    notification.info({\n      message: \"New version available!\",\n      description:\n        \"To use the updated version, close all tabs for this site and reopen it\",\n      duration: 0\n    });\n  }\n});\n"],"sourceRoot":""}